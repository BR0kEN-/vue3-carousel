import{_ as a,o as d,c as o,t as g,n as k,j as t,a as s,G as n,a0 as E,B as b}from"./chunks/framework.CH_Jd00V.js";const m={name:"Badge",props:{text:"",type:""}};function y(r,l,e,p,u,h){return d(),o("span",{class:k(["badge",e.type])},g(e.text),3)}const c=a(m,[["render",y],["__scopeId","data-v-5c8b1cba"]]),f={components:{Badge:c}},A=JSON.parse('{"title":"Config","description":"","frontmatter":{},"headers":[],"relativePath":"config.md","filePath":"config.md"}'),v={tabindex:"0"};function q(r,l,e,p,u,h){const i=b("Badge");return d(),o("div",null,[l[29]||(l[29]=t("h1",{id:"config",tabindex:"-1"},[s("Config "),t("a",{class:"header-anchor",href:"#config","aria-label":'Permalink to "Config"'},"​")],-1)),l[30]||(l[30]=t("h2",{id:"available-props",tabindex:"-1"},[s("Available Props "),t("a",{class:"header-anchor",href:"#available-props","aria-label":'Permalink to "Available Props"'},"​")],-1)),t("table",v,[l[28]||(l[28]=t("thead",null,[t("tr",null,[t("th",null,"Prop"),t("th",null,"Default"),t("th",null,"Description")])],-1)),t("tbody",null,[l[21]||(l[21]=t("tr",null,[t("td",null,[t("code",null,"itemsToShow")]),t("td",null,"1"),t("td",null,"count of items to showed per view (can be a fraction).")],-1)),l[22]||(l[22]=t("tr",null,[t("td",null,[t("code",null,"itemsToScroll")]),t("td",null,"1"),t("td",null,"number of slides to be scrolled")],-1)),l[23]||(l[23]=t("tr",null,[t("td",null,[t("code",null,"wrapAround")]),t("td",null,"false"),t("td",null,"enable infinite scrolling mode.")],-1)),l[24]||(l[24]=t("tr",null,[t("td",null,[t("code",null,"snapAlign")]),t("td",null,"'center'"),t("td",null,"controls the carousel position alignment, can be 'start', 'end', 'center-[odd|even]'")],-1)),l[25]||(l[25]=t("tr",null,[t("td",null,[t("code",null,"transition")]),t("td",null,"300"),t("td",null,"sliding transition time in ms.")],-1)),l[26]||(l[26]=t("tr",null,[t("td",null,[t("code",null,"autoplay")]),t("td",null,"0"),t("td",null,"Auto play time in ms.")],-1)),t("tr",null,[l[1]||(l[1]=t("td",null,[t("code",null,"breakpointMode")],-1)),l[2]||(l[2]=t("td",null,"'viewport'",-1)),t("td",null,[l[0]||(l[0]=s("determines how the carousel breakpoints are calculated. acceptable values: 'viewport', 'carousel' ")),n(i,{text:"0.5.0"})])]),l[27]||(l[27]=t("tr",null,[t("td",null,[t("code",null,"breakpoints")]),t("td",null,"null"),t("td",null,"an object to pass all the breakpoints settings.")],-1)),t("tr",null,[l[4]||(l[4]=t("td",null,[t("code",null,"modelValue")],-1)),l[5]||(l[5]=t("td",null,"0",-1)),t("td",null,[l[3]||(l[3]=s("index number of the initial slide. ")),n(i,{text:"0.1.20"})])]),t("tr",null,[l[7]||(l[7]=t("td",null,[t("code",null,"mouseDrag")],-1)),l[8]||(l[8]=t("td",null,"true",-1)),t("td",null,[l[6]||(l[6]=s("toggle mouse dragging ")),n(i,{text:"0.1.23"})])]),t("tr",null,[l[10]||(l[10]=t("td",null,[t("code",null,"touchDrag")],-1)),l[11]||(l[11]=t("td",null,"true",-1)),t("td",null,[l[9]||(l[9]=s("toggle pointer touch dragging ")),n(i,{text:"0.1.23"})])]),t("tr",null,[l[13]||(l[13]=t("td",null,[t("code",null,"pauseAutoplayOnHover")],-1)),l[14]||(l[14]=t("td",null,"false",-1)),t("td",null,[l[12]||(l[12]=s("toggle if auto play should pause on mouse hover ")),n(i,{text:"0.1.25"})])]),t("tr",null,[l[16]||(l[16]=t("td",null,[t("code",null,"dir")],-1)),l[17]||(l[17]=t("td",null,"ltr",-1)),t("td",null,[l[15]||(l[15]=s("controls the carousel direction. Available values 'ltr', 'rtl' ")),n(i,{text:"0.1.38"})])]),t("tr",null,[l[19]||(l[19]=t("td",null,[t("code",null,"i18n")],-1)),l[20]||(l[20]=t("td",null,[t("a",{href:"#i18n"},[t("code",null,"{ ariaNextSlide: ...}")])],-1)),t("td",null,[l[18]||(l[18]=s("Used to translate and/or change aria labels and additional texts used in the carousel. ")),n(i,{text:"0.3.1"})])])])]),l[31]||(l[31]=E(`<h2 id="slots" tabindex="-1">Slots <a class="header-anchor" href="#slots" aria-label="Permalink to &quot;Slots&quot;">​</a></h2><h3 id="slides-default" tabindex="-1">Slides/Default <a class="header-anchor" href="#slides-default" aria-label="Permalink to &quot;Slides/Default&quot;">​</a></h3><p>Used to render the carousel items. You can use either the default slot or wrap element in <code>slides</code> slot.</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Carousel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;template #slides&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;Slide v-for=&quot;slide in 10&quot; :key=&quot;slide&quot;&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/Slide&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/template&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Carousel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="addons" tabindex="-1">Addons <a class="header-anchor" href="#addons" aria-label="Permalink to &quot;Addons&quot;">​</a></h3><p>Used to add display carousel addons components.</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Carousel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;template #addons&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;Navigation /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;Pagination /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/template&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Carousel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="slots-attributes" tabindex="-1">Slots Attributes <a class="header-anchor" href="#slots-attributes" aria-label="Permalink to &quot;Slots Attributes&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Prop</th><th>Description</th></tr></thead><tbody><tr><td><code>slideWidth</code></td><td>the width of a single slide element.</td></tr><tr><td><code>currentSlide</code></td><td>index number of the current slide.</td></tr><tr><td><code>slidesCount</code></td><td>the count of all slides</td></tr></tbody></table><h4 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h4><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Carousel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;Slide v-for=&quot;slide in slides&quot; :key=&quot;slide&quot;&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;div class=&quot;carousel__item&quot;&gt;{{ slide }}&lt;/div&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/Slide&gt;</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;template #addons=&quot;{ slidesCount }&quot;&gt;</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;Navigation v-if=&quot;slidesCount &gt; 1&quot; /&gt;</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/template&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Carousel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="i18n" tabindex="-1">I18n <a class="header-anchor" href="#i18n" aria-label="Permalink to &quot;I18n&quot;">​</a></h3><p>Avaialbe keys:</p><table tabindex="0"><thead><tr><th>Key</th><th>Defaults</th></tr></thead><tbody><tr><td><code>ariaNextSlide</code></td><td>&quot;Navigate to next slide&quot;</td></tr><tr><td><code>ariaPreviousSlide</code></td><td>&quot;Navigate to previous slide&quot;</td></tr><tr><td><code>ariaNavigateToSlide</code></td><td>&quot;Navigate to slide {slideNumber}&quot;</td></tr><tr><td><code>ariaGallery</code></td><td>&quot;Gallery&quot;</td></tr><tr><td><code>itemXofY</code></td><td>&quot;Item {currentSlide} of {slidesCount}&quot;</td></tr><tr><td><code>iconArrowUp</code></td><td>&quot;Arrow pointing upwards&quot;</td></tr><tr><td><code>iconArrowDown</code></td><td>&quot;Arrow pointing downwards&quot;</td></tr><tr><td><code>iconArrowRight</code></td><td>&quot;Arrow pointing to the right&quot;</td></tr><tr><td><code>iconArrowLeft</code></td><td>&quot;Arrow pointing to the left&quot;</td></tr></tbody></table>`,14))])}const w=a(f,[["render",q]]);export{A as __pageData,w as default};
