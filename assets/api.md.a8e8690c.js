import{B as t}from"./Badge.2fa9b3be.js";import{_ as n,r as d,c as o,a,b as l,d as e,e as i,o as p}from"./app.0a22f7a1.js";const c={components:{Badge:t}},w='{"title":"API","description":"","frontmatter":{},"headers":[{"level":2,"title":"Methods","slug":"methods"},{"level":3,"title":"Available methods","slug":"available-methods"},{"level":2,"title":"Data","slug":"data"},{"level":3,"title":"Available Data","slug":"available-data"}],"relativePath":"api.md","lastUpdated":1660570365788}',r={id:"api",tabindex:"-1"},u=e("API "),h=e(),k=a("a",{class:"header-anchor",href:"#api","aria-hidden":"true"},"#",-1),f=i(`<h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><p>To use the API methods, add a reference to the carousel element and then call methods from that reference.</p><p>Example:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Carousel</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myCarousel<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  ...
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Carousel</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> myCarousel <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Methods are available in this reference</span>
myCarousel<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
myCarousel<span class="token punctuation">.</span><span class="token function">updateSlideWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="available-methods" tabindex="-1">Available methods <a class="header-anchor" href="#available-methods" aria-hidden="true">#</a></h3><h4 id="slideto-index-number" tabindex="-1">slideTo(index: number) <a class="header-anchor" href="#slideto-index-number" aria-hidden="true">#</a></h4><p>Slide to specific slide index</p><h4 id="next" tabindex="-1">next() <a class="header-anchor" href="#next" aria-hidden="true">#</a></h4><p>Slide to the next slide</p><h4 id="prev" tabindex="-1">prev() <a class="header-anchor" href="#prev" aria-hidden="true">#</a></h4><p>Slide to the previous slide</p><h4 id="updateslidewidth" tabindex="-1">updateSlideWidth() <a class="header-anchor" href="#updateslidewidth" aria-hidden="true">#</a></h4><p>Update <code>slideWidth</code> value based on <code>itemsToShow</code> and the current carousel width</p><h4 id="updateslidesbuffer" tabindex="-1">updateSlidesBuffer() <a class="header-anchor" href="#updateslidesbuffer" aria-hidden="true">#</a></h4><p>Update <code>slidesBuffer</code> array which keep of the slides order, used mainly when <code>wrapAround</code> is <em>true</em></p><h4 id="updatebreakpointsconfigs" tabindex="-1">updateBreakpointsConfigs() <a class="header-anchor" href="#updatebreakpointsconfigs" aria-hidden="true">#</a></h4><p>Update the current carousel configs based on <code>breakpoints</code> settings and screen width</p><h4 id="updateslidesdata" tabindex="-1">updateSlidesData() <a class="header-anchor" href="#updateslidesdata" aria-hidden="true">#</a></h4><p>Update all the slide related date includes:</p><ul><li><code>currentSlideIndex</code></li><li><code>middleSlide</code></li><li><code>maxSlide</code></li><li><code>minSlide</code></li></ul><h4 id="initcarousel" tabindex="-1">initCarousel() <a class="header-anchor" href="#initcarousel" aria-hidden="true">#</a></h4><p>Init the carousel configs, internally it calls:</p><ul><li><code>initDefaultConfigs</code></li></ul><h4 id="restartcarousel" tabindex="-1">restartCarousel() <a class="header-anchor" href="#restartcarousel" aria-hidden="true">#</a></h4><p>Restart the carousel settings and data, internally it calls:</p><ul><li><code>initDefaultConfigs</code></li><li><code>resetAutoplay</code></li><li><code>updateBreakpointsConfigs</code></li><li><code>updateSlidesBuffer</code></li><li><code>updateSlidesData</code></li><li><code>updateSlideWidth</code></li></ul><h4 id="updatecarousel" tabindex="-1">updateCarousel() <a class="header-anchor" href="#updatecarousel" aria-hidden="true">#</a></h4><p>Update the carousel and slides data, it invokes after each slider slide, internally it calls:</p><ul><li><code>updateSlidesData</code></li><li><code>updateSlidesBuffer</code></li></ul><h2 id="data" tabindex="-1">Data <a class="header-anchor" href="#data" aria-hidden="true">#</a></h2><p>To use the data values, add a reference to the carousel element and then get the values from the data property.</p><p>Example:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Carousel</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myCarousel<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  ...
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Carousel</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> myCarousel <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Data can be accessed under data property</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>myCarousel<span class="token punctuation">.</span>data<span class="token punctuation">.</span>currentSlide <span class="token operator">===</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Do your magic here</span>
<span class="token punctuation">}</span>
<span class="token operator">...</span><span class="token punctuation">.</span>
</code></pre></div><h3 id="available-data" tabindex="-1">Available Data <a class="header-anchor" href="#available-data" aria-hidden="true">#</a></h3><table><thead><tr><th>Data</th><th>Description</th></tr></thead><tbody><tr><td><code>config</code></td><td>the current carousel configuration</td></tr><tr><td><code>slidesCount</code></td><td>slides total count</td></tr><tr><td><code>slideWidth</code></td><td>single slide width</td></tr><tr><td><code>currentSlide</code></td><td>current slide index</td></tr><tr><td><code>maxSlide</code></td><td>maximum slide index</td></tr><tr><td><code>minSlide</code></td><td>minimum slide index</td></tr><tr><td><code>middleSlide</code></td><td>middle slide index</td></tr></tbody></table>`,37);function m(g,b,v,x,_,y){const s=d("Badge");return p(),o("div",null,[a("h1",r,[u,l(s,{text:"Vue@3.2+"}),h,k]),f])}var D=n(c,[["render",m]]);export{w as __pageData,D as default};
